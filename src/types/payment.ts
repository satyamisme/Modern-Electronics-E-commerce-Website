// src/types/payment.ts
import { Product } from './product'; // Assuming Product type is needed for CartItem details

export interface CartItem {
  productId: string | number;
  name: string; // Denormalized for easy display in cart
  price: number; // Price per unit at the time of adding to cart
  quantity: number;
  image?: string; // URL of the main product image
  // Potentially add selected variant info if applicable
  // variantId?: string;
}

export interface Cart {
  items: CartItem[];
  totalItems: number;
  subtotal: number;
  discountAmount?: number;
  shippingCost?: number;
  grandTotal: number;
  currency: 'KWD'; // Defaulting to KWD as per user request
}

export interface KuwaitAddress { // Specific for Kuwait
  id?: string;
  type?: 'home' | 'work' | 'other'; // From original Address type
  recipientName?: string;
  governorate: string;
  area: string;
  block: string;
  street: string;
  building: string;
  apartmentOrFloor?: string;
  notes?: string;
  phone?: string;
  isDefaultShipping?: boolean;
  isDefaultBilling?: boolean;
}

// A more generic Order type that OrderDetails can extend or be part of
export interface BaseOrder {
  orderId: string; // Usually generated by backend
  userId?: string; // If applicable
  orderDate: string | Date;
  status: 'Pending' | 'Processing' | 'Shipped' | 'Delivered' | 'Cancelled' | 'Refunded'; // Example statuses
  currency: 'KWD';
  subtotal: number;
  shippingCost: number;
  discountAmount?: number;
  grandTotal: number;
  customerNotes?: string;
}

export interface OrderDetails extends BaseOrder {
  items: CartItem[]; // Detailed items
  shippingAddress: KuwaitAddress; // Using specific Kuwait address here
  billingAddress?: KuwaitAddress; // Optional, may be same as shipping
  paymentMethod: string; // e.g., 'KNET', 'CreditCard'
  paymentTransactionId?: string;
  // KNET specific details if needed after payment attempt
  knetPaymentDetails?: KnetPaymentResponse; // Store full KNET response if needed
  trackingNumber?: string;
  estimatedDeliveryDate?: string | Date;
}


// For KNET utility function parameters/responses
export interface KnetPaymentRequest {
  amount: number; // in KWD, (e.g., 10.500 KWD)
  orderId: string; // Your internal order ID
  customerEmail?: string;
  redirectUrl: string;
  errorUrl: string;
}

export interface KnetPaymentResponse {
  transactionId: string; // KNET's transaction ID
  paymentId: string;
  result: 'SUCCESS' | 'FAILURE' | 'PENDING' | 'CANCELLED' | 'ERROR';
  authCode?: string;
  referenceId?: string; // Your orderId
  postDate?: string;
  errorCode?: string;
  errorMessage?: string;
  rawResponse?: any;
}

export interface KnetRefundRequest {
  transactionId: string;
  amount: number;
  reason?: string;
}

export interface KnetRefundResponse {
  refundId: string;
  status: 'Success' | 'Failed' | 'Pending';
  message?: string;
  rawResponse?: any;
}
